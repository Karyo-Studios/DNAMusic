body {
  color: #fff;
  background-color: #222222;
  font-family: 'Din', monospace;
}

@font-face {
  font-family: 'Din';
  src: local('Din'), url(./assets/fonts/din-reg.ttf) format('ttf');
}

@font-face {
  font-family: 'Din Medium';
  src: local('Din'), url(./assets/fonts/din.ttf) format('ttf');
}

/* react slider  */

.horizontal-slider {
  width: calc(100% - 2rem);
  height: 2rem;
  margin: auto;
}
.example-thumb {
  cursor: pointer;
  position: absolute;
  z-index: 100;
  border: 5px solid #eee;
  background-color: #eee;
  display: block;
}

.example-thumb.active {
  background-color: #eee;
}
.example-track {
  position: relative;
  background: #333;
}
.example-track.example-track-1 {
  background-color: #eee;
}
.horizontal-slider .example-track {
  top: 20px;
  height: 4px;
}
.horizontal-slider .example-thumb {
  top: 12px;
  width: 12px;
  outline: none;
  height: 20px;
  line-height: 38px;
  border-radius: 4px;
}

/* blobs */

path,
line {
  fill: none;
  stroke-width: 15;
  stroke-linecap: round;
}

.svg {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
}

.animatingEnd {
  animation: linePulseEnd var(--timeout2) linear forwards;
}

@keyframes linePulseEnd {
  0% {
    stroke: hsla(var(--h), var(--s), var(--l), 1);
    stroke-dashoffset: var(--offset);
    stroke-width: var(--stroke-width);
    stroke-dasharray: var(--start) var(--initial) var(--segment_length);
  }

  49% {
    stroke: rgba(255, 255, 255, 1);
    stroke-width: var(--stroke-width);
  }

  50% {
    stroke: rgba(255, 255, 255, 0);
    stroke-width: var(--stroke-width);
    stroke-dashoffset: var(--offset);
    stroke-dasharray: var(--start_midway) var(--initial) 0;
  }

  100% {
    stroke: rgba(255, 255, 255, 0);
    stroke-dashoffset: var(--offset);
    stroke-dasharray: var(--end) var(--initial) var(--segment_length);
  }
}


.animating {
  animation: linePulse var(--timeout) cubic-bezier(0.19, 1, 0.22, 1) forwards;
}

@keyframes linePulse {
  0% {
    stroke: hsla(var(--h), var(--s), var(--l), 1);
    stroke-width: var(--stroke-width);
    stroke-dashoffset: var(--offset);
    stroke-dasharray: var(--start) var(--initial) var(--segment_length);
  }

  100% {
    stroke: hsla(var(--h), var(--s), var(--l), 1);
    stroke-width: var(--stroke-width);
    stroke-dashoffset: var(--offset);
    stroke-dasharray: var(--end) var(--initial) var(--segment_length);
  }
}